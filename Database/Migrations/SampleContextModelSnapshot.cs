// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sample.Database.Context;

namespace Sample.Database.Migrations
{
    [DbContext(typeof(SampleContext))]
    partial class SampleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Sample.Database.Entities.Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_attributes");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_attributes_category_id");

                    b.ToTable("attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c732a300-3dd9-46b6-8d38-0b6512212fa1"),
                            CategoryId = new Guid("a427f99e-d620-49fb-afa3-69b81b41556c"),
                            Name = "Height",
                            Type = 1
                        });
                });

            modelBuilder.Entity("Sample.Database.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a427f99e-d620-49fb-afa3-69b81b41556c"),
                            Description = "Supper pupper toys",
                            Name = "Super toy"
                        });
                });

            modelBuilder.Entity("Sample.Database.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Sample.Database.Entities.ProductAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("AttributeId")
                        .HasColumnType("uuid")
                        .HasColumnName("attribute_id");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_product_attribute_values");

                    b.HasIndex("AttributeId")
                        .HasDatabaseName("ix_product_attribute_values_attribute_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_product_attribute_values_product_id");

                    b.ToTable("product_attribute_values");
                });

            modelBuilder.Entity("Sample.Database.Entities.Attribute", b =>
                {
                    b.HasOne("Sample.Database.Entities.Category", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_attributes_categories_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Sample.Database.Entities.Product", b =>
                {
                    b.HasOne("Sample.Database.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Sample.Database.Entities.ProductAttributeValue", b =>
                {
                    b.HasOne("Sample.Database.Entities.Attribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .HasConstraintName("fk_product_attribute_values_attributes_attribute_id");

                    b.HasOne("Sample.Database.Entities.Product", null)
                        .WithMany("Values")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_attribute_values_products_product_id");

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("Sample.Database.Entities.Category", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("Sample.Database.Entities.Product", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
